###########
# BUILDER #
###########

# pull official base image
FROM python:2.7-alpine as builder

# set work directory
WORKDIR /usr/src/mailsender

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python2-dev musl-dev postgresql-client

# linter
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .

RUN flake8 .

# install dependencies, put in wheels dir
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/mailsender/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:2.7-alpine

# create directory
RUN mkdir -p /home/mailsender_user

# create the app user
# -G - group
# -S - Create a system user|group
RUN addgroup -S mailsender && adduser -S mailsender_user -G mailsender

# create the appropriate directories
ENV HOME=/home/mailsender_user
ENV APP_HOME=/home/mailsender_user/mailsender
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME


# install dependencies
# libpq for postgres
RUN apk update && apk add libpq
COPY --from=builder /usr/src/mailsender/wheels /wheels
COPY --from=builder /usr/src/mailsender/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
# -R - recursive
RUN chown -R mailsender_user:mailsender $APP_HOME

# change to the app user
USER mailsender_user

# run entrypoint.prod.sh
ENTRYPOINT ["/home/mailsender_user/mailsender/entrypoint.prod.sh"]